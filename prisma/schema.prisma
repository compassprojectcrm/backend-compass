generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Agent {
  agentId   Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  packages Package[]
}

model Package {
  packageId   Int           @id @default(autoincrement())
  packageName String
  tripType    TripType
  status      PackageStatus @default(ACTIVE)
  price       Float
  description String?
  isFeatured  Boolean       @default(false)
  isPrivate   Boolean       @default(false)

  startDate DateTime
  endDate   DateTime

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  destinations Destination[]
  agent        Agent         @relation(fields: [agentId], references: [agentId], onDelete: Cascade)
  agentId      Int
}

enum PackageStatus {
  ACTIVE
  INACTIVE
  ARCHIVED
}

enum TripType {
  GLOBAL
  LOCAL
}

model Country {
  countryId   Int     @id @default(autoincrement())
  countryName String  @unique
  states      State[]
}

model State {
  stateId   Int     @id @default(autoincrement())
  stateName String
  country   Country @relation(fields: [countryId], references: [countryId], onDelete: Cascade)
  countryId Int
  cities    City[]
}

model City {
  cityId       Int           @id @default(autoincrement())
  cityName     String
  state        State         @relation(fields: [stateId], references: [stateId], onDelete: Cascade)
  stateId      Int
  destinations Destination[]
}

model Destination {
  destinationId Int @id @default(autoincrement())

  city   City @relation(fields: [cityId], references: [cityId], onDelete: Cascade)
  cityId Int

  Package   Package @relation(fields: [packageId], references: [packageId], onDelete: Cascade)
  packageId Int
}
