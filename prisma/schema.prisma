generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Agent {
  agentId      Int       @id @default(autoincrement())
  firstName    String
  lastName     String
  companyName  String
  email        String    @unique
  password     String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  packages     Package[]
}

model Package {
  packageId   Int           @id @default(autoincrement())
  packageName String
  tripType    TripType
  status      PackageStatus @default(ACTIVE)
  price       Float
  members     Int
  description String?
  isFeatured  Boolean       @default(false)
  isPrivate   Boolean       @default(false)

  startDate DateTime
  endDate   DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  destinations Destination[]
  agent        Agent         @relation(fields: [agentId], references: [agentId], onDelete: Cascade)
  agentId      Int

  subscriptions PackageSubscription[] @relation("PackageSubscriptions")
}

model PackageSubscription {
  id Int @id @default(autoincrement())

  package   Package @relation(fields: [packageId], references: [packageId], onDelete: Cascade, name: "PackageSubscriptions")
  packageId Int

  traveller   Traveller @relation(fields: [travellerId], references: [travellerId], onDelete: Cascade, name: "TravellerSubscriptions")
  travellerId Int

  subscribedAt DateTime @default(now())
  moneyPaid    Float    @default(0)

  @@unique([packageId, travellerId])
}

enum PackageStatus {
  ACTIVE
  INACTIVE
  ARCHIVED
}

enum TripType {
  GLOBAL
  LOCAL
}

model Country {
  countryId   Int     @id @default(autoincrement())
  countryName String  @unique
  states      State[]
}

model State {
  stateId   Int     @id @default(autoincrement())
  stateName String
  country   Country @relation(fields: [countryId], references: [countryId], onDelete: Cascade)
  countryId Int
  cities    City[]
}

model City {
  cityId       Int           @id @default(autoincrement())
  cityName     String
  state        State         @relation(fields: [stateId], references: [stateId], onDelete: Cascade)
  stateId      Int
  destinations Destination[]
}

model Destination {
  destinationId Int      @id @default(autoincrement())
  title         String
  description   String?
  startDate     DateTime
  endDate       DateTime
  city          City     @relation(fields: [cityId], references: [cityId], onDelete: Cascade)
  cityId        Int

  Package   Package @relation(fields: [packageId], references: [packageId], onDelete: Cascade)
  packageId Int
}

model Traveller {
  travellerId Int      @id @default(autoincrement())
  firstName   String
  lastName    String
  email       String   @unique
  password    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  subscriptions PackageSubscription[] @relation("TravellerSubscriptions")
}
